{"version":3,"file":"static/js/643.645d93da.chunk.js","mappings":"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","sources":["redux/adverts/advertsSelectors.js","hooks/useAdverts.js","components/Modal/Modal.jsx","components/Catalog/Catalog.jsx","pages/CatalogPage.jsx"],"sourcesContent":["export const selectCar = state => state.adverts.car;\nexport const selectAdvertsError = state => state.adverts.adertsError;\nexport const selectAdvertsPage = state => state.adverts.page;\nexport const selectAllCar = state => state.adverts.allCar;\nexport const selectOpenModal = state => state.adverts.openModal;\nexport const selectIdCar = state => state.adverts.idCar;\n","import { useSelector } from 'react-redux';\nimport {\n  selectCar,\n  selectAdvertsPage,\n  selectAllCar,\n  selectOpenModal,\n  selectIdCar,\n} from 'redux/adverts/advertsSelectors';\n\nexport const useAdverts = () => {\n  const car = useSelector(selectCar);\n  const page = useSelector(selectAdvertsPage);\n  const allCar = useSelector(selectAllCar);\n  const OpenModal = useSelector(selectOpenModal);\n  const idCar = useSelector(selectIdCar);\n\n  return {\n    car,\n    page,\n    allCar,\n    OpenModal,\n    idCar,\n  };\n};\n","import { createPortal } from 'react-dom';\nimport styles from 'styles/index.module.scss';\nimport { useDispatch } from 'react-redux';\nimport advertsOperations from 'redux/adverts/advertsOperations';\nimport { useAdverts } from 'hooks';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = () => {\n  const { idCar, allCar } = useAdverts();\n\n  const dispatch = useDispatch();\n\n  const buttonExit = () => {\n    dispatch(advertsOperations.modal({ IdCar: 0, OpenModal: false }));\n  };\n  const onClickBackdrop = e => {\n    const currentEl = e.currentTarget;\n    const targettEl = e.target;\n    if (currentEl === targettEl) {\n      dispatch(advertsOperations.modal({ IdCar: 0, OpenModal: false }));\n    }\n  };\n  const filteredCar = allCar.filter(car => car.id && car.id === idCar);\n  return createPortal(\n    <>\n      <div onClick={onClickBackdrop} className={styles.ModalBасkdrор}>\n        <div className={styles.ModalContent}>\n          <button\n            className={styles.modalButtonExit}\n            onClick={() => {\n              buttonExit();\n            }}\n          ></button>\n          {filteredCar &&\n            filteredCar.map(\n              ({\n                id,\n                year,\n                make,\n                model,\n                img,\n                address,\n                type,\n                accessories,\n                description,\n                rentalPrice,\n                fuelConsumption,\n                engineSize,\n                rentalConditions,\n                mileage,\n              }) => {\n                const text = `${address} ${'|'} id :${id} ${'|'} year : ${year} ${'|'} type : ${type} ${'|'} fuel consumption : ${fuelConsumption} ${'|'} engine size : ${engineSize}`;\n                const result = text.replace(/[\\s.,%]/g, '  ');\n\n                return (\n                  <div key={id} className={styles.cartModal}>\n                    <div className={styles.cartModalImgWr}>\n                      <img\n                        src={img}\n                        className={styles.cartModalImg}\n                        alt=\"model\"\n                      />\n                    </div>\n                    <div className={styles.cartModalModel}>\n                      {make}{' '}\n                      <span className={styles.cartModalModelNameAccent}>\n                        {model}\n                      </span>\n                      {', '}\n                      {year}\n                    </div>\n                    <span className={styles.cartModalDescriptionF}>\n                      {result}\n                    </span>\n                    <span className={styles.cartModalDescriptionS}>\n                      {description}\n                    </span>\n                    <span className={styles.cartModalDescriptionRWR}>\n                      <span className={styles.cartModalDescriptionR}>\n                        Accessories and functionalities:\n                      </span>\n                      <span className={styles.cartModalDescriptionT}>\n                        {accessories}\n                      </span>\n                    </span>\n                    <div className={styles.cartModalRentalWr}>\n                      <span className={styles.cartModalRentalTitle}>\n                        Rental Conditions:\n                      </span>\n                      <div className={styles.cartModalRentalUseWr}>\n                        <span className={styles.cartModalRentalUse}>\n                          Minimum age :\n                          <span className={styles.cartModalRentalUseAccent}>\n                            {rentalConditions}\n                          </span>\n                        </span>\n                        <span className={styles.cartModalRentalUse}>\n                          Mileage :\n                          <span className={styles.cartModalRentalUseAccent}>\n                            {mileage}\n                          </span>\n                        </span>\n                        <span className={styles.cartModalRentalUse}>\n                          Price :\n                          <span className={styles.cartModalRentalUseAccent}>\n                            {rentalPrice}\n                          </span>\n                        </span>\n                      </div>\n                    </div>\n\n                    <button className={styles.cartModalModelButton}>\n                      Rental car\n                    </button>\n                  </div>\n                );\n              }\n            )}\n        </div>\n      </div>\n    </>,\n    modalRoot\n  );\n};\n","import styles from 'styles/index.module.scss';\nimport { Modal } from 'components/Modal/Modal';\nimport { useDispatch } from 'react-redux';\nimport advertsOperations from 'redux/adverts/advertsOperations';\nimport { useEffect } from 'react';\nimport { useAdverts } from 'hooks';\n\nconst Catalog = () => {\n  const { car, adertsError, page, allCar, OpenModal } = useAdverts();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(advertsOperations.getAdverts());\n    dispatch(advertsOperations.getAdvertsAll());\n  }, [dispatch]);\n\n  const LoadMore = e => {\n    const newPages = page + 1;\n    dispatch(advertsOperations.getAdvertsMore(newPages));\n  };\n  const openModal = id => {\n    dispatch(advertsOperations.modal({ idCar: id, OpenModal: true }));\n  };\n\n  return (\n    <section className={styles.spContainer}>\n      <div className={styles.shContainer}>\n        <div className={styles.sgContainer}>\n          <div className={styles.sideBar}>\n            <button>Search</button>\n          </div>\n          {!car && <div>{adertsError}</div>}\n          {car && (\n            <ul className={styles.cartCar}>\n              {car &&\n                car.map(\n                  ({\n                    id,\n                    year,\n                    make,\n                    model,\n                    img,\n                    address,\n                    rentalCompany,\n                    accessories,\n                    rentalPrice,\n                    functionalities,\n                  }) => {\n                    const text = `${address} ${rentalCompany} ${model}${functionalities} ${accessories}`;\n                    const result =\n                      text.replace(/[\\s.,%]/g, ' | ').substring(0, 100) + '...';\n\n                    return (\n                      <li key={id} className={styles.cartCarItem}>\n                        <div className={styles.cartCarImgWr}>\n                          <img\n                            src={img}\n                            className={styles.cartCarImg}\n                            alt=\"model\"\n                          />\n                          <button className={styles.cartCarImgHeart}>\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"18\"\n                              height=\"18\"\n                              viewBox=\"0 0 18 18\"\n                              fill=\"none\"\n                            >\n                              <path\n                                d=\"M15.63 3.4575C15.2469 3.07425 14.7921 2.77023 14.2915 2.56281C13.7909 2.35539 13.2543 2.24863 12.7125 2.24863C12.1706 2.24863 11.634 2.35539 11.1334 2.56281C10.6329 2.77023 10.178 3.07425 9.79497 3.4575L8.99997 4.2525L8.20497 3.4575C7.4312 2.68373 6.38174 2.24903 5.28747 2.24903C4.19319 2.24903 3.14374 2.68373 2.36997 3.4575C1.5962 4.23127 1.1615 5.28072 1.1615 6.375C1.1615 7.46927 1.5962 8.51873 2.36997 9.2925L3.16497 10.0875L8.99997 15.9225L14.835 10.0875L15.63 9.2925C16.0132 8.90943 16.3172 8.45461 16.5247 7.95401C16.7321 7.45342 16.8388 6.91686 16.8388 6.375C16.8388 5.83313 16.7321 5.29657 16.5247 4.79598C16.3172 4.29539 16.0132 3.84056 15.63 3.4575Z\"\n                                fill=\"transparent\"\n                                stroke=\"white\"\n                              />\n                            </svg>\n                          </button>\n                        </div>\n                        <div className={styles.cartCarModelWr}>\n                          <span className={styles.cartCarModelName}>\n                            {make}{' '}\n                            <span className={styles.cartCarModelNameAccent}>\n                              {model}\n                            </span>\n                            {', '}\n                            {year}\n                          </span>\n                          <span className={styles.cartCarModelPrice}>\n                            {rentalPrice}\n                          </span>\n                        </div>\n                        <div className={styles.cartCarDescriptionWr}>\n                          <span className={styles.cartCarDescription}>\n                            {result}\n                          </span>\n                        </div>\n                        <button\n                          className={styles.cartCarModelButton}\n                          onClick={() => {\n                            openModal(id);\n                          }}\n                        >\n                          Learn more\n                        </button>\n                      </li>\n                    );\n                  }\n                )}\n            </ul>\n          )}\n\n          {allCar.length !== car.length && (\n            <div className={styles.loadMoreCarWr}>\n              <button\n                className={styles.loadMoreCar}\n                onClick={() => {\n                  LoadMore();\n                }}\n              >\n                Load more\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      {OpenModal && <Modal />}\n    </section>\n  );\n};\nexport default Catalog;\n","import Catalog from 'components/Catalog/Catalog';\nconst CatalogPage = () => {\n  return (\n    <>\n      <Catalog />\n    </>\n  );\n};\nexport default CatalogPage;\n"],"names":["selectCar","state","adverts","car","selectAdvertsPage","page","selectAllCar","allCar","selectOpenModal","openModal","selectIdCar","idCar","useAdverts","useSelector","OpenModal","modalRoot","document","querySelector","Modal","dispatch","useDispatch","filteredCar","filter","id","createPortal","onClick","e","currentTarget","target","advertsOperations","IdCar","className","styles","map","year","make","model","img","address","type","accessories","description","rentalPrice","fuelConsumption","engineSize","rentalConditions","mileage","result","replace","src","alt","adertsError","useEffect","rentalCompany","functionalities","substring","xmlns","width","height","viewBox","fill","d","stroke","length","newPages","LoadMore"],"sourceRoot":""}